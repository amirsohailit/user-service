name: Build and Deploy to Azure

# Trigger on push to main branch or manual workflow_dispatch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 3: Build Docker image using Docker Compose
      - name: Build Docker image
        run: docker-compose build app

      # Step 4: Tag Docker image for Docker Hub
      - name: Tag Docker image
        run: docker tag user-app:0.0.1 ${{ secrets.DOCKERHUB_USERNAME }}/user-app:0.0.1

      # Step 5: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/user-app:0.0.1

      # Step 6: Install Azure CLI
      - name: Install Azure CLI
        uses: azure/setup-azure@v3

      # Step 7: Log in to Azure using a service principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 8: Set App Service environment variables
      - name: Configure Azure App Service Settings
        run: |
          az webapp config appsettings set \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_WEBAPP_NAME }} \
            --settings \
              SPRING_PROFILES_ACTIVE=prod \
              MONGO_URI="${{ secrets.MONGO_URI }}" \
              KAFKA_BOOTSTRAP_SERVERS="${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}" \
              KAFKA_USERNAME="${{ secrets.KAFKA_USERNAME }}" \
              KAFKA_PASSWORD="${{ secrets.KAFKA_PASSWORD }}"

      # Step 9: Deploy Docker image to Azure App Service
      - name: Deploy Docker image to Azure
        run: |
          az webapp config container set \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_WEBAPP_NAME }} \
            --docker-custom-image-name ${{ secrets.DOCKERHUB_USERNAME }}/user-app:0.0.1

      # Step 10: Restart the App Service to apply changes
      - name: Restart Azure App Service
        run: az webapp restart --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_WEBAPP_NAME }}
